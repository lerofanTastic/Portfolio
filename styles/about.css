/**********************************
 * Стили классов секции "Обо мне" *
 **********************************/
 .about-details {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 6.94vh 0 0 0;
}

.about-desc {
  width: 70%;
  margin: 3.7vh 0 16.85vh 0;
  padding: 0;
}

.about-photo {
  /* Для фотографии используем относительную высоту и ширину,
   * которые опираются на размеры окна.
   * Это помогает сохранить корректное соотношение сторон (здесь 3:4)
   * при изменении размера окна. 
   * Проценты (%) не дают возможности сохранять правильное соотношение,
   * т.к. опираются на размеры родительского элемента, а не окна. */
  width: 30vmax;
  height: 40vmax;
  /* Добавляем отрицательный margin, чтобы фото заезжало на элемент выше.
   * Задаем его также через vw, так как высота фото динамична и зависит
   * от размера окна пользователя. 
   * margin в таком случае тоже должен быть динамичным.
   * Задаем margin так, чтобы изображение заезжало на элемент выше 
   * примерно на 1/4 своей высоты. */
  margin: -5vw 0 7.03vh 0;
  padding: 0;
  border: var(--img-border);
  border-radius: 10px;
  /* Рамка картинки border и скругление углов указываются на контейнере для картинки,
   * а не на самой картинке. 
   * Поэтому нужно скрыть края картинки, которые могут 
   * выступать за рамки скругления. 
   * Для этого используем свойство overflow.
   * Углы у самой картинки скруглять не стоит. Рамка здесь накладывается
   * на родительский элемент, а не на саму картинку. 
   * Если скруглить углы и у картинки тоже, то скругления рамки
   * и картинки не совпадут. Это будет выглядеть плохо. */
  overflow: hidden;
}

.about-photo img {
  height: 100%;
  width: 100%;
  /* Обрезанием фото под нужный размер контейнера и центрируем
   * изображение. 
   * Делаем это с помощью object fit.
   * Если его не указать, отображаться будет только левый 
   * верхний угол картинки, и размер картинки не будет 
   * подогнан под размеры контейнера. */
  object-fit: cover;
}